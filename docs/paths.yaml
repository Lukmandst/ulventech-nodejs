# Auth API

/auth/signup:
  post:
    tags: [Auth]
    description: Create a new user account
    summary: Create a new user account with username and password
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
                example: user
              password:
                type: string
                example: password
    responses:
      200:
        description: user successfully registered
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                status:
                  type: string
                  example: "success"
                statusCode:
                  type: integer
                  example: 200
                data:
                  type: array
                  example: []
                message:
                  type: string
                  example: "{username} successfully registered"

/auth/admin-signup:
  post:
    tags: [Auth]
    description: Create a new admin account
    summary: Create a new admin account with username and password
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
                example: admin
              password:
                type: string
                example: password
    responses:
      200:
        description: user successfully registered"
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                status:
                  type: string
                  example: "success"
                statusCode:
                  type: integer
                  example: 200
                data:
                  type: array
                  example: []
                message:
                  type: string
                  example: "{username} successfully registered"

/auth/signin:
  post:
    tags: [Auth]
    description: Login to user account and get user token for authorization
    summary: Login to user account with username and password
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
                example: user
              password:
                type: string
                example: password
    responses:
      200:
        description: user successfully signin
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                status:
                  type: string
                  example: "success"
                statusCode:
                  type: integer
                  example: 200
                data:
                  type: array
                  items:
                    type: object
                  example: [{ username: user, role_id: user, token: "token" }]
                message:
                  type: string
                  example: "Login Success"

# Menu API

/menu/user-menu:
  get:
    tags: [Menu]
    description: this route only available user, admin cannot access
    summary: menu only for user (BEARER TOKEN REQUIRED)
    responses:
      200:
        description: able to access this menu route
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                status:
                  type: string
                  example: "success"
                statusCode:
                  type: integer
                  example: 200
                data:
                  type: array
                  items:
                    type: object
                  example: []
                message:
                  type: string
                  example: "Hello World"
      500:
        description: unable to access this menu route
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                status:
                  type: string
                  example: "error"
                statusCode:
                  type: integer
                  example: 500
                data:
                  type: array
                  items:
                    type: object
                  example: []
                message:
                  type: string
                  example: "You are not USER! Access Restricted!"

/menu/admin-menu:
  get:
    tags: [Menu]
    description: this route only available admin, user cannot access
    summary: menu only for admin (BEARER TOKEN REQUIRED)
    responses:
      200:
        description: able to access this menu route
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                status:
                  type: string
                  example: "success"
                statusCode:
                  type: integer
                  example: 200
                data:
                  type: array
                  items:
                    type: object
                  example: []
                message:
                  type: string
                  example: "Hello World"
      500:
        description: unable to access this menu route
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                status:
                  type: string
                  example: "error"
                statusCode:
                  type: integer
                  example: 500
                data:
                  type: array
                  items:
                    type: object
                  example: []
                message:
                  type: string
                  example: "You are not ADMIN! Access Restricted!"

/menu:
  get:
    tags: [Menu]
    description: this is a public route to access menu without authorization
    summary: menu for everyone
    responses:
      200:
        description: you are able to access this menu
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                status:
                  type: string
                  example: "success"
                statusCode:
                  type: integer
                  example: 200
                data:
                  type: array
                  items:
                    type: object
                  example: []
                message:
                  type: string
                  example: "Hello World"
